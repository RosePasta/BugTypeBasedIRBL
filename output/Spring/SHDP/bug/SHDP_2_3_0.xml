<?xml version = "1.0" encoding = "UTF-8" ?>
<bugrepository name="SHDP">
<bug id="531" opendate="2015-10-26 18:35:10" fixdate="2015-10-30 08:16:50" resolution="Complete">
<buginformation>
<summary>AppmasterLauncherRunner can call exit() twice causing jvm to block</summary>
<description>Its possible for the AppmasterLauncherRunners.class to receive two appmaster state events when being used with StaticAppmaster. This causes System.exit to be called twice and is  causing the jvm to block indefinitely. From the jvm docs for Runtime.exit(), &quot;If this method is invoked after the virtual machine has begun its shutdown sequence then if shutdown hooks are being run this method will block indefinitely. If shutdown hooks have already been run and on-exit finalization has been enabled then this method halts the virtual machine with the given status code if the status is nonzero; otherwise, it blocks indefinitely. The System.exit method is the conventional and convenient means of invoking this method.&quot; I get two of these lines in my logs, the second being the last entry. INFO [Thread-2]  CommandLineRunnerSupport: About to exit using code= 0</description>
<version>2.3.0.RC1</version>
<fixedVersion>2.3.0 RC2</fixedVersion>
<type>PB</type>
</buginformation>
<links>
</links>
<fixedFiles>
<file type="M" name="org.springframework.yarn.boot.support.AppmasterLauncherRunner.java">
<method>launchAppmaster(YarnAppmaster,String[])</method>
</file>
</fixedFiles>
</bug>
<bug id="532" opendate="2015-11-09 15:05:30" fixdate="2015-11-09 15:48:17" resolution="Complete">
<buginformation>
<summary>Container cluster may start wrong member</summary>
<description>Defining two groups and starting only one may result first allocated container to get matched from a group which is not running, effectively starting a wrong container. Looks to be caused be a fact that grid projection is attached to projected grid when cluster is created thus allowing projection to get matched there. Should handle this so that attach doesn&amp;amp;apos;t happen until group is started.</description>
<version>2.3.0.RC1</version>
<fixedVersion>2.3.0 RC2</fixedVersion>
<type>PB-TF</type>
</buginformation>
<links>
</links>
<fixedFiles>
<file type="M" name="org.springframework.yarn.am.cluster.AbstractContainerClusterAppmaster.java">
<method>startContainerCluster(String)</method>
</file>
<file type="M" name="org.springframework.yarn.am.cluster.ContainerClusterStateMachineConfiguration.java">
</file>
</fixedFiles>
</bug>
<bug id="562" opendate="2016-04-28 09:59:07" fixdate="2016-06-13 16:52:05" resolution="Complete">
<buginformation>
<summary>Missing trailing slash on spring.yarn.applicationDir path fails to localize</summary>
<description>If the trailing slash is not included in the spring.yarn.applicationDir property then the relevant files are distributed to HDFS but they are not then localized to the appmaster/container. There are two minor issues with this:  This could be automatically handled to allow the files to be localized correctly. The only error is when launch_container.sh fails with Error: Unable to access jarfile, which does not help with identifying the issue.  </description>
<version>2.3.0 GA</version>
<fixedVersion>2.4.0 RC1</fixedVersion>
<type>PB</type>
</buginformation>
<links>
</links>
<fixedFiles>
<file type="M" name="org.springframework.yarn.boot.support.SpringYarnBootUtils.java">
<method>resolveApplicationdir(SpringYarnProperties)</method>
</file>
</fixedFiles>
</bug>
<bug id="572" opendate="2016-09-08 22:56:46" fixdate="2016-12-15 18:12:33" resolution="Complete">
<buginformation>
<summary>FsShell.chgrp fires a chmod operation on hadoop instead of chgrp</summary>
<description>org.springframework.data.hadoop.fs.FsShell shell; . . . shell.chgrp(true, &quot;group1&quot;, &quot;/path/to/hdfs/folder&quot;);  On execution, this line fails with:- Caused by: java.lang.IllegalArgumentException: chmod : mode &amp;amp;apos;group1&amp;amp;apos; does not match the expected pattern.         at org.apache.hadoop.fs.FsShellPermissions$Chmod.processOptions(FsShellPermissions.java:93) ~[hadoop-common-2.7.1.jar!/:na]         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_77]         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_77]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_77]         at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_77]         at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:216) ~[spring-core-4.2.4.RELEASE.jar!/:4.2.4.RELEASE]         at org.springframework.data.hadoop.fs.FsShellPermissions.changePermissions(FsShellPermissions.java:102) ~[spring-data-hadoop-core-2.3.0.M3.jar!/:2.3.0.M3]         at org.springframework.data.hadoop.fs.FsShell.chgrp(FsShell.java:178) ~[spring-data-hadoop-core-2.3.0.M3.jar!/:2.3.0.M3]         at org.springframework.data.hadoop.fs.FsShell.chgrp(FsShell.java:174) ~[spring-data-hadoop-core-2.3.0.M3.jar!/:2.3.0.M3]</description>
<version>2.3.0 M3</version>
<fixedVersion>2.4.1, 2.5.0.M1</fixedVersion>
<type>PB</type>
</buginformation>
<links>
</links>
<fixedFiles>
<file type="M" name="org.springframework.data.hadoop.fs.FsShell.java">
<method>chgrpr(String,String)</method>
<method>chgrp(String,String)</method>
</file>
<file type="M" name="org.springframework.data.hadoop.fs.FsShellPermissions.java">
</file>
</fixedFiles>
</bug>
</bugrepository>

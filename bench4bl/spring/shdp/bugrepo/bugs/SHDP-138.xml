<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 17:34:22 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SHDP-138/SHDP-138.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SHDP-138] PortExposingTcpSocketSupport not working properly</title>
                <link>https://jira.spring.io/browse/SHDP-138</link>
                <project id="10801" key="SHDP">Spring for Apache Hadoop</project>
                    <description>&lt;p&gt;spring-yarn-integration is using spring-integration tcp channels and by following same testing logic used in spring-integration it seems that we hit into problems with trying to find free ports.&lt;/p&gt;

&lt;p&gt;Happens randomly and difficult to re-produce&lt;/p&gt;

&lt;p&gt;i.e. MindIntegrationRawTests:&lt;br/&gt;
&amp;lt;bean id=&quot;tcpIpUtils&quot; class=&quot;org.springframework.integration.test.util.SocketUtils&quot; /&amp;gt;&lt;br/&gt;
&amp;lt;bean id=&quot;socketSupport&quot; class=&quot;org.springframework.yarn.integration.support.DefaultPortExposingTcpSocketSupport&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;ip:tcp-connection-factory id=&quot;serverConnectionFactory&quot;&lt;br/&gt;
  type=&quot;server&quot;&lt;br/&gt;
  port=&quot;#&lt;/p&gt;
{tcpIpUtils.findAvailableServerSocket(7400)}
&lt;p&gt;&quot;&lt;br/&gt;
  socket-support=&quot;socketSupport&quot;&lt;br/&gt;
  serializer=&quot;serializer&quot;&lt;br/&gt;
  deserializer=&quot;deserializer&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;bean id=&quot;mindAppmasterService&quot; class=&quot;org.springframework.yarn.integration.ip.mind.TestService&quot; &amp;gt;&lt;br/&gt;
  &amp;lt;property name=&quot;socketSupport&quot; ref=&quot;socketSupport&quot;/&amp;gt;&lt;br/&gt;
  &amp;lt;property name=&quot;messageChannel&quot; ref=&quot;serverChannel&quot;/&amp;gt;&lt;br/&gt;
&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;Test fails with:&lt;br/&gt;
assertThat(mindAppmasterService.getPort(), greaterThan(0));&lt;/p&gt;</description>
                <environment></environment>
        <key id="49183">SHDP-138</key>
            <summary>PortExposingTcpSocketSupport not working properly</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="jvalkeal">Janne Valkealahti</assignee>
                                    <reporter username="jvalkeal">Janne Valkealahti</reporter>
                        <labels>
                    </labels>
                <created>Tue, 18 Jun 2013 04:06:05 +0000</created>
                <updated>Wed, 23 Oct 2013 09:19:06 +0000</updated>
                            <resolved>Fri, 19 Jul 2013 01:13:38 +0000</resolved>
                                                                    <component>YARN</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="90998" author="jvalkeal" created="Tue, 18 Jun 2013 04:08:44 +0000"  >&lt;p&gt;Possible scenarios are:&lt;br/&gt;
a. tcpIpUtils.findAvailableServerSocket(7400) somehow fails&lt;br/&gt;
b. In DefaultPortExposingTcpSocketSupport.postProcessServerSocket(ServerSocket) port is not yet bind&lt;br/&gt;
when method is called.  &lt;/p&gt;</comment>
                            <comment id="91019" author="jvalkeal" created="Wed, 19 Jun 2013 01:27:50 +0000"  >&lt;p&gt;There is a bug in DefaultPortExposingTcpSocketSupport which wrongly assumes that post process for socket is actually post process which it&apos;s not. Nio sockets wasn&apos;t tested which allowed to re-produce this case.&lt;/p&gt;</comment>
                            <comment id="91474" author="jvalkeal" created="Wed, 3 Jul 2013 09:59:17 +0000"  >&lt;p&gt;fixed in master with PR #10&lt;/p&gt;</comment>
                            <comment id="91813" author="jvalkeal" created="Wed, 17 Jul 2013 01:05:08 +0000"  >&lt;p&gt;Tests are still failing. I think problem is that Spring Int socket support is not perfect concept order to find bind server socket local port because callbacks to socket support happens a bit too early.&lt;/p&gt;

&lt;p&gt;Framework classes which are using this does wait/polling for bind port, tests are not. &lt;/p&gt;</comment>
                            <comment id="91862" author="jvalkeal" created="Fri, 19 Jul 2013 01:13:38 +0000"  >&lt;p&gt;should be re-fixed in master&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                                                                                    <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35694</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i06dvr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37287</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35396</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>
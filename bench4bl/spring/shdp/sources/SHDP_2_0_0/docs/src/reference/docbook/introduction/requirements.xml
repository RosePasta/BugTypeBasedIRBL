<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xml:id="requirements"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:ns6="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/1998/Math/MathML"
         xmlns:ns4="http://www.w3.org/1999/xhtml"
         xmlns:ns3="http://www.w3.org/2000/svg"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Requirements</title>

  <para>Spring for Apache Hadoop 2.0 is built and tested with JDK 7.0 (generated jars are usable in JDK 6.0 and above), <ulink
  url="http://projects.spring.io/spring-framework/">Spring Framework</ulink> 4.0 and
  is by default built against <ulink url="http://hadoop.apache.org/">Apache
  Hadoop</ulink> 2.2.0.</para>

  <para>Spring for Apache Hadoop 2.0 supports the following versions and distributions: <itemizedlist>
      <listitem>
        <para><ulink url="http://hadoop.apache.org/">Apache Hadoop</ulink> 
        1.2.1</para>
      </listitem>

      <listitem>
        <para><ulink url="http://hadoop.apache.org/">Apache Hadoop</ulink> 
        2.2.0 *</para>
      </listitem>

      <listitem>
        <para><ulink url="http://hadoop.apache.org/">Apache Hadoop</ulink> 
        2.4.0 *</para>
      </listitem>

      <listitem>
        <para><ulink url="http://www.gopivotal.com/">Pivotal</ulink> HD
        1.1</para>
      </listitem>

      <listitem>
        <para><ulink url="http://www.gopivotal.com/">Pivotal</ulink> HD
        2.0 *</para>
      </listitem>

      <listitem>
        <para><ulink url="http://www.cloudera.com/">Cloudera</ulink> CDH4
        (CDH4.6.0)</para>
      </listitem>

      <listitem>
        <para><ulink url="http://www.cloudera.com/">Cloudera</ulink> CDH5
        (2.3.0-cdh5.0.0) *</para>
      </listitem>

      <listitem>
        <para><ulink url="http://www.hortonworks.com/">Hortonworks</ulink>
        Data Platform 1.3</para>
      </listitem>

      <listitem>
        <para><ulink url="http://www.hortonworks.com/">Hortonworks</ulink>
        Data Platform 2.0 *</para>
      </listitem>

      <listitem>
        <para><ulink url="http://www.hortonworks.com/">Hortonworks</ulink>
        Data Platform 2.1 *</para>
      </listitem>
    </itemizedlist>
    <para>* The distributions noted with and asterisk will include spring-yarn support in the build.</para>
    <para>Any distribution compatible with Apache Hadoop 1.x or 2.2.x should be supported.</para>
    <note>
      <para>Spring for Apache Hadoop has been certified to work on Pivotal HD 1.0
      and 1.1, Hortonworks HDP 1.3 and Cloudera CDH 4.4 distributions. Further certifications will be done 
      soon now that Spring for Apache 2.0 has reached GA.</para>
    </note>
  </para>

  <para>Spring for Apache Hadoop 2.0 is tested daily against a number of Hadoop distributions. See the <ulink
  url="https://build.spring.io/browse/SPRINGDATAHADOOP">test plan page</ulink> for current status.</para>

  <para>Instructions for setting up project builds using various supported
  distributions are provided on the Spring for Apache Hadoop wiki - <ulink
  url="https://github.com/spring-projects/spring-hadoop/wiki">https://github.com/spring-projects/spring-hadoop/wiki</ulink></para>

  <para>Regarding Hadoop-related projects, SDHP supports <ulink
  url="http://hbase.apache.org/">HBase</ulink> 0.94.11, <ulink
  url="http://hive.apache.org/">Hive</ulink> 0.10.0 and <ulink
  url="http://pig.apache.org/">Pig</ulink> 0.10.1 and above. As a rule of
  thumb, when using Hadoop-related projects, such as Hive or Pig, use the
  required Hadoop version as a basis for discovering the supported
  versions.</para>

  <para>To take full advantage of Spring for Apache Hadoop you need a
  running Hadoop cluster. If you don't already have one in your
  environment, a good first step is to create a single-node cluster. To
  install the most recent stable verision of Hadoop, the "<link
  ns6:href="http://hadoop.apache.org/common/docs/stable/#Getting+Started">Getting
  Started"</link> page from the official Apache documentation is a good
  general guide. There should be a link for "Single Node Setup".</para>

  <para>
  It is also convenient to download a Virtual Machine where Hadoop is setup
  and ready to go. Cloudera, Hortonworks and Pivotal all provide virtual
  machines and provide VM downloads on their product pages. Additionally, the
  <link linkend="appendices">appendix</link> provides information on how to
  use Spring for Apache Hadoop and setup Hadoop with cloud providers, such as
  Amazon Web Services.</para>
</chapter>
